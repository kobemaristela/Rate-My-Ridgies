{
  "version": 3,
  "sources": ["../../stacks/ApiStack.js", "../../stacks/StorageStack.js", "../../stacks/index.js"],
  "sourcesContent": ["import { Api, use } from \"@serverless-stack/resources\";\nimport { StorageStack } from \"./StorageStack\";\n\nexport function ApiStack({ stack, app }) {\n  const { profiles, reviews } = use(StorageStack);\n\n  // Create the API\n  const profilesApi = new Api(stack, \"ProfilesApi\", {\n    defaults: {\n      function: {\n        permissions: [profiles],\n        environment: {\n          PROFILES_NAME: profiles.tableName,\n        },\n      },\n    },\n    routes: {\n      \"POST /profiles\": \"backend/profiles/functions/create.main\",\n    },\n  });\n\n  // Create the API\n  const reviewsApi = new Api(stack, \"ReviewsApi\", {\n    defaults: {\n      function: {\n        permissions: [reviews],\n        environment: {\n          REVIEWS_NAME: reviews.tableName,\n        },\n      },\n    },\n    routes: {\n      \"POST /reviews\": \"backend/reviews/functions/create.main\",\n    },\n  });\n\n  // Show the API endpoint in the output\n  stack.addOutputs({\n    ProfilesApiEndpoint: profilesApi.url,\n    // ReviewsApiEndpoint: reviewsApi.url,\n  });\n\n  // Return the API resource\n  return {\n    profilesApi,\n    // reviewsApi,\n  };\n}", "import { Bucket, Table } from \"@serverless-stack/resources\";\n\nexport function StorageStack({ stack }) {\n  // Create an S3 bucket\n  const bucket = new Bucket(stack, \"Photos\");\n\n  // Create the DynamoDB table\n  const profiles = new Table(stack, \"Profiles\", {\n    fields: {\n      profileId: \"string\",\n      role: \"string\",\n      photo: \"string\",\n      likes: \"number\",\n    },\n    primaryIndex: { partitionKey: \"profileId\" },\n  });\n\n  const reviews = new Table(stack, \"Reviews\", {\n    fields: {\n      profileId: \"string\",\n      reviewId: \"string\",\n      body: \"string\"\n    },\n    primaryIndex: { partitionKey: \"reviewId\"},\n  });\n\n  // Return the bucket and table resources\n  return {\n    profiles,\n    reviews,\n    bucket,\n  };\n}\n", "import { ApiStack } from \"./ApiStack\";\nimport { StorageStack } from \"./StorageStack\";\n\nexport default function main(app) {\n  app.setDefaultFunctionProps({\n    runtime: \"nodejs16.x\",\n    srcPath: \"backend\",\n    bundle: {\n      format: \"esm\",\n    },\n  });\n  app.stack(StorageStack).stack(ApiStack);\n}\n"],
  "mappings": ";;;;;;AAAA;;;ACAA;AAEO,sBAAsB,EAAE,SAAS;AAEtC,QAAM,SAAS,IAAI,OAAO,OAAO,QAAQ;AAGzC,QAAM,WAAW,IAAI,MAAM,OAAO,YAAY;AAAA,IAC5C,QAAQ;AAAA,MACN,WAAW;AAAA,MACX,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA,cAAc,EAAE,cAAc,YAAY;AAAA,EAC5C,CAAC;AAED,QAAM,UAAU,IAAI,MAAM,OAAO,WAAW;AAAA,IAC1C,QAAQ;AAAA,MACN,WAAW;AAAA,MACX,UAAU;AAAA,MACV,MAAM;AAAA,IACR;AAAA,IACA,cAAc,EAAE,cAAc,WAAU;AAAA,EAC1C,CAAC;AAGD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AA9BgB;;;ADCT,kBAAkB,EAAE,OAAO,OAAO;AACvC,QAAM,EAAE,UAAU,YAAY,IAAI,YAAY;AAG9C,QAAM,cAAc,IAAI,IAAI,OAAO,eAAe;AAAA,IAChD,UAAU;AAAA,MACR,UAAU;AAAA,QACR,aAAa,CAAC,QAAQ;AAAA,QACtB,aAAa;AAAA,UACX,eAAe,SAAS;AAAA,QAC1B;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,kBAAkB;AAAA,IACpB;AAAA,EACF,CAAC;AAGD,QAAM,aAAa,IAAI,IAAI,OAAO,cAAc;AAAA,IAC9C,UAAU;AAAA,MACR,UAAU;AAAA,QACR,aAAa,CAAC,OAAO;AAAA,QACrB,aAAa;AAAA,UACX,cAAc,QAAQ;AAAA,QACxB;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,iBAAiB;AAAA,IACnB;AAAA,EACF,CAAC;AAGD,QAAM,WAAW;AAAA,IACf,qBAAqB,YAAY;AAAA,EAEnC,CAAC;AAGD,SAAO;AAAA,IACL;AAAA,EAEF;AACF;AA5CgB;;;AEAD,cAAc,KAAK;AAChC,MAAI,wBAAwB;AAAA,IAC1B,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,QAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACD,MAAI,MAAM,YAAY,EAAE,MAAM,QAAQ;AACxC;AATwB;",
  "names": []
}
