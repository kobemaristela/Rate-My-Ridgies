[2022-06-24T16:13:22.183] [DEBUG] default - SST: 1.2.20
[2022-06-24T16:13:22.185] [DEBUG] default - CDK: 2.24.0
[2022-06-24T16:13:22.196] [DEBUG] aws-auth - Determining if we're on an EC2 instance.
[2022-06-24T16:13:22.197] [DEBUG] aws-auth - Does not look like an EC2 instance.
[2022-06-24T16:13:22.234] [INFO] default - Using stage: dev
[2022-06-24T16:13:22.236] [INFO] default - [90mPreparing your SST app[39m
[2022-06-24T16:13:22.259] [INFO] default - 
[2022-06-24T16:13:22.260] [INFO] default - =======================
[2022-06-24T16:13:22.260] [INFO] default -  Deploying debug stack
[2022-06-24T16:13:22.260] [INFO] default - =======================
[2022-06-24T16:13:22.260] [INFO] default - 
[2022-06-24T16:13:22.261] [DEBUG] default - synth {
  app: 'node bin/index.mjs RMR dev us-west-2 "/Users/kobe.maristela/Desktop/RMR"',
  output: 'cdk.out',
  rollback: true,
  roleArn: undefined,
  verbose: 0,
  noColor: false
}
[2022-06-24T16:13:25.965] [TRACE] cdk - 

[2022-06-24T16:13:25.999] [INFO] default - [90mDeploying stacks[39m
[2022-06-24T16:13:26.000] [DEBUG] default - checkInReviewBootstrapStacks
[2022-06-24T16:13:26.000] [DEBUG] default - checkInReviewBootstrapStackInRegion us-west-2
[2022-06-24T16:13:26.450] [TRACE] default - Initial stack states: [{"id":"dev-RMR-debug-stack","name":"dev-RMR-debug-stack","status":"pending","dependencies":[],"region":"us-west-2","events":[]}]
[2022-06-24T16:13:26.450] [TRACE] default - After update deploy statuses: [{"id":"dev-RMR-debug-stack","name":"dev-RMR-debug-stack","status":"pending","dependencies":[],"region":"us-west-2","events":[]}]
[2022-06-24T16:13:26.451] [DEBUG] default - deploy stack: started dev-RMR-debug-stack
[2022-06-24T16:13:26.452] [DEBUG] default - deploy stack: get pre-deploy status
[2022-06-24T16:13:26.816] [DEBUG] default - deploy stack: get pre-deploy status: {
  StackStatus: 'CREATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T22:57:27.646Z
}
[2022-06-24T16:13:26.817] [DEBUG] default - deploy stack: addInUseExports
[2022-06-24T16:13:26.819] [DEBUG] default - deploy stack: isTemplateChanged
[2022-06-24T16:13:27.374] [DEBUG] default - Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Table/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Prefix: payloads/
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: 'true'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Bucket/Resource
  BucketPolicyE9A3008A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket83908E77
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: '2012-10-17'
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Bucket/Policy/Resource
  BucketAutoDeleteObjectsCustomResourceBAFD23C2:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: Bucket83908E77
    DependsOn:
      - BucketPolicyE9A3008A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Bucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: >-
            arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ''
          - - 'Lambda function for auto-deleting objects in '
            - Ref: Bucket83908E77
            - ' S3 bucket.'
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be
      aws:asset:property: Code
  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: dev-RMR-debug-stack-api
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Api
  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: Api
      StageName: dev
      AutoDeploy: true
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/ApiStage
  ConnectServiceRole07B61CE8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/ServiceRole/Resource
  ConnectServiceRoleDefaultPolicyCE008EDB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ConnectServiceRoleDefaultPolicyCE008EDB
      Roles:
        - Ref: ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/ServiceRole/DefaultPolicy/Resource
  Connect5B7625CA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ConnectServiceRole07B61CE8
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsConnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ConnectServiceRoleDefaultPolicyCE008EDB
      - ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectLogRetentionC1F463CD:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Connect5B7625CA
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/LogRetention/Resource
  ConnectConnectPermission9DBC7813:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Connect5B7625CA
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/ConnectPermission
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-west-2:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Connect5B7625CA
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/ConnectIntegration
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $connect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ConnectIntegration
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/ConnectRoute
  DisconnectServiceRole90AEC2EB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/ServiceRole/Resource
  DisconnectServiceRoleDefaultPolicy32856207:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: DisconnectServiceRoleDefaultPolicy32856207
      Roles:
        - Ref: DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/ServiceRole/DefaultPolicy/Resource
  Disconnect7D6B12BD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - DisconnectServiceRole90AEC2EB
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDisconnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - DisconnectServiceRoleDefaultPolicy32856207
      - DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DisconnectLogRetentionE61D7937:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Disconnect7D6B12BD
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/LogRetention/Resource
  DisconnectDisconnectPermission933E876E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Disconnect7D6B12BD
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/DisconnectPermission
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-west-2:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Disconnect7D6B12BD
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/DisconnectIntegration
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $disconnect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DisconnectIntegration
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/DisconnectRoute
  ServiceRole4288B192:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/ServiceRole/Resource
  ServiceRoleDefaultPolicy94CF55F6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ServiceRoleDefaultPolicy94CF55F6
      Roles:
        - Ref: ServiceRole4288B192
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/ServiceRole/DefaultPolicy/Resource
  Resource:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ServiceRole4288B192
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDefault.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ServiceRoleDefaultPolicy94CF55F6
      - ServiceRole4288B192
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LogRetentionDD0A1FA1:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Resource
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/LogRetention/Resource
  DefaultPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Resource
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/DefaultPermission
  DefaultIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-west-2:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Resource
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/DefaultIntegration
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DefaultIntegration
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/DefaultRoute
Outputs:
  Endpoint:
    Value:
      Fn::Join:
        - ''
        - - Fn::GetAtt:
              - Api
              - ApiEndpoint
          - /dev
  BucketArn:
    Value:
      Fn::GetAtt:
        - Bucket83908E77
        - Arn
  BucketName:
    Value:
      Ref: Bucket83908E77
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-06-24T16:13:27.375] [DEBUG] default - Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Table/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Prefix: payloads/
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: 'true'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Bucket/Resource
  BucketPolicyE9A3008A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket83908E77
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: '2012-10-17'
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Bucket/Policy/Resource
  BucketAutoDeleteObjectsCustomResourceBAFD23C2:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: Bucket83908E77
    DependsOn:
      - BucketPolicyE9A3008A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Bucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: >-
            arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ''
          - - 'Lambda function for auto-deleting objects in '
            - Ref: Bucket83908E77
            - ' S3 bucket.'
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be
      aws:asset:property: Code
  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: dev-RMR-debug-stack-api
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Api
  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: Api
      StageName: dev
      AutoDeploy: true
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/ApiStage
  ConnectServiceRole07B61CE8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/ServiceRole/Resource
  ConnectServiceRoleDefaultPolicyCE008EDB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ConnectServiceRoleDefaultPolicyCE008EDB
      Roles:
        - Ref: ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/ServiceRole/DefaultPolicy/Resource
  Connect5B7625CA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ConnectServiceRole07B61CE8
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsConnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ConnectServiceRoleDefaultPolicyCE008EDB
      - ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectLogRetentionC1F463CD:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Connect5B7625CA
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/LogRetention/Resource
  ConnectConnectPermission9DBC7813:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Connect5B7625CA
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Connect/ConnectPermission
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        dev-RMR-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-west-2:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Connect5B7625CA
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/ConnectIntegration
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $connect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ConnectIntegration
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/ConnectRoute
  DisconnectServiceRole90AEC2EB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/ServiceRole/Resource
  DisconnectServiceRoleDefaultPolicy32856207:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: DisconnectServiceRoleDefaultPolicy32856207
      Roles:
        - Ref: DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/ServiceRole/DefaultPolicy/Resource
  Disconnect7D6B12BD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - DisconnectServiceRole90AEC2EB
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDisconnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - DisconnectServiceRoleDefaultPolicy32856207
      - DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DisconnectLogRetentionE61D7937:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Disconnect7D6B12BD
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/LogRetention/Resource
  DisconnectDisconnectPermission933E876E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Disconnect7D6B12BD
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Disconnect/DisconnectPermission
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-west-2:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Disconnect7D6B12BD
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/DisconnectIntegration
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $disconnect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DisconnectIntegration
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/DisconnectRoute
  ServiceRole4288B192:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/ServiceRole/Resource
  ServiceRoleDefaultPolicy94CF55F6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ServiceRoleDefaultPolicy94CF55F6
      Roles:
        - Ref: ServiceRole4288B192
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/ServiceRole/DefaultPolicy/Resource
  Resource:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ServiceRole4288B192
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDefault.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ServiceRoleDefaultPolicy94CF55F6
      - ServiceRole4288B192
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LogRetentionDD0A1FA1:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Resource
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/LogRetention/Resource
  DefaultPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Resource
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/Default/DefaultPermission
  DefaultIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-west-2:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Resource
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/DefaultIntegration
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DefaultIntegration
    Metadata:
      aws:cdk:path: dev-RMR-debug-stack/DefaultRoute
Outputs:
  Endpoint:
    Value:
      Fn::Join:
        - ''
        - - Fn::GetAtt:
              - Api
              - ApiEndpoint
          - /dev
  BucketArn:
    Value:
      Fn::GetAtt:
        - Bucket83908E77
        - Arn
  BucketName:
    Value:
      Ref: Bucket83908E77
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-06-24T16:13:27.375] [DEBUG] default - deploy stack: isTemplateChanged: unchanged
[2022-06-24T16:13:27.375] [DEBUG] default - deploy stack: done dev-RMR-debug-stack {
  status: 'unchanged',
  statusReason: undefined,
  account: '215957796486',
  outputs: {
    BucketArn: 'arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80',
    BucketName: 'dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80',
    Endpoint: 'wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev'
  },
  exports: {}
}
[2022-06-24T16:13:27.376] [INFO] default - [32m[39m
[32m ✅  dev-RMR-debug-stack (no changes)[39m
[32m[39m
[2022-06-24T16:13:27.376] [DEBUG] default - At least 1 stack successfully deployed, call deployStacks() again
[2022-06-24T16:13:27.376] [TRACE] default - After deploy stacks: [{"id":"dev-RMR-debug-stack","name":"dev-RMR-debug-stack","status":"unchanged","dependencies":[],"account":"215957796486","region":"us-west-2","startedAt":1656112407376,"endedAt":1656112407376,"events":[],"outputs":{"BucketArn":"arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80","BucketName":"dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80","Endpoint":"wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev"},"exports":{}}]
[2022-06-24T16:13:27.377] [INFO] default - 
Stack dev-RMR-debug-stack
[2022-06-24T16:13:27.377] [INFO] default -   Status: no changes
[2022-06-24T16:13:27.378] [INFO] default -   Outputs:
[2022-06-24T16:13:27.378] [INFO] default -     BucketArn: arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
[2022-06-24T16:13:27.378] [INFO] default -     BucketName: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
[2022-06-24T16:13:27.378] [INFO] default -     Endpoint: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
[2022-06-24T16:13:27.379] [INFO] default - 
[2022-06-24T16:13:27.379] [DEBUG] default - deployRet [
  {
    id: 'dev-RMR-debug-stack',
    name: 'dev-RMR-debug-stack',
    region: 'us-west-2',
    status: 'unchanged',
    errorMessage: undefined,
    outputs: {
      BucketArn: 'arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80',
      BucketName: 'dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80',
      Endpoint: 'wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev'
    },
    exports: {}
  }
]
[2022-06-24T16:13:27.380] [INFO] default - 
[2022-06-24T16:13:27.380] [INFO] default - ===============
[2022-06-24T16:13:27.380] [INFO] default -  Deploying app
[2022-06-24T16:13:27.380] [INFO] default - ===============
[2022-06-24T16:13:27.380] [INFO] default - 
[2022-06-24T16:13:27.381] [DEBUG] default - synth {
  app: 'node .build/run.mjs',
  output: '.build/cdk.out',
  rollback: true,
  roleArn: undefined,
  verbose: 0,
  noColor: false
}
[2022-06-24T16:13:31.094] [TRACE] cdk - [32mSuccessfully synthesized to [34m/Users/kobe.maristela/Desktop/RMR/.build/cdk.out[39m[32m[39m

[2022-06-24T16:13:31.095] [TRACE] cdk - Supply a stack id ([32mdev-RMR-StorageStack[39m, [32mdev-RMR-ApiStack[39m) to display its template.

[2022-06-24T16:13:31.104] [TRACE] cdk - 

[2022-06-24T16:13:33.704] [INFO] default - [90mDeploying stacks[39m
[2022-06-24T16:13:33.705] [DEBUG] default - checkInReviewBootstrapStacks
[2022-06-24T16:13:33.706] [DEBUG] default - checkInReviewBootstrapStackInRegion us-west-2
[2022-06-24T16:13:34.083] [TRACE] default - Initial stack states: [{"id":"dev-RMR-StorageStack","name":"dev-RMR-StorageStack","status":"pending","dependencies":[],"region":"us-west-2","events":[]},{"id":"dev-RMR-ApiStack","name":"dev-RMR-ApiStack","status":"pending","dependencies":["dev-RMR-StorageStack"],"region":"us-west-2","events":[]}]
[2022-06-24T16:13:34.084] [TRACE] default - After update deploy statuses: [{"id":"dev-RMR-StorageStack","name":"dev-RMR-StorageStack","status":"pending","dependencies":[],"region":"us-west-2","events":[]},{"id":"dev-RMR-ApiStack","name":"dev-RMR-ApiStack","status":"pending","dependencies":["dev-RMR-StorageStack"],"region":"us-west-2","events":[]}]
[2022-06-24T16:13:34.084] [DEBUG] default - deploy stack: started dev-RMR-StorageStack
[2022-06-24T16:13:34.084] [DEBUG] default - deploy stack: get pre-deploy status
[2022-06-24T16:13:34.432] [DEBUG] default - deploy stack: get pre-deploy status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:15.892Z
}
[2022-06-24T16:13:34.434] [DEBUG] default - deploy stack: addInUseExports
[2022-06-24T16:13:34.756] [DEBUG] default - deploy stack: addInUseExports: export dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5 used in dev-RMR-ApiStack
[2022-06-24T16:13:34.768] [DEBUG] default - deploy stack: addInUseExports: export dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2 used in dev-RMR-ApiStack
[2022-06-24T16:13:34.771] [DEBUG] default - deploy stack: isTemplateChanged
[2022-06-24T16:13:35.113] [DEBUG] default - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: dev-RMR-StorageStack/SSTMetadata
      sst:version: 1.2.20
      sst:constructs:
        - id: Photos
          addr: c87ba073e4a15d934642a3aaf5c89ce796c7ca0bc3
          stack: dev-RMR-StorageStack
          type: Bucket
          data:
            name:
              Ref: PhotosBucket4131342A
            notifications: []
            notificationNames: []
        - id: Profiles
          addr: c8a6c2721e285bf4ac63deb145f62326d28ac4cc12
          stack: dev-RMR-StorageStack
          type: Table
          data:
            tableName:
              Ref: ProfilesTable43079065
            consumers: []
        - id: Reviews
          addr: c8f228ea1767577df2034a9c0ea3ed6ce6610cc6e9
          stack: dev-RMR-StorageStack
          type: Table
          data:
            tableName:
              Ref: ReviewsTable854B2DAD
            consumers: []
  PhotosBucket4131342A:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-StorageStack/Photos/Bucket/Resource
  ProfilesTable43079065:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: profileId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: profileId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: dev-RMR-Profiles
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-StorageStack/Profiles/Table/Resource
  ReviewsTable854B2DAD:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: reviewId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: reviewId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: dev-RMR-Reviews
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-StorageStack/Reviews/Table/Resource
Outputs:
  ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850:
    Value:
      Fn::GetAtt:
        - ProfilesTable43079065
        - Arn
    Export:
      Name: >-
        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
  ExportsOutputRefProfilesTable43079065AF0BFE3F:
    Value:
      Ref: ProfilesTable43079065
    Export:
      Name: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
  ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2:
    Value:
      Fn::GetAtt:
        - ReviewsTable854B2DAD
        - Arn
    Export:
      Name: >-
        dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2
  ExportsOutputRefReviewsTable854B2DAD5D6B8FD5:
    Value:
      Ref: ReviewsTable854B2DAD
    Export:
      Name: dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-06-24T16:13:35.113] [DEBUG] default - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: dev-RMR-StorageStack/SSTMetadata
      sst:version: 1.2.20
      sst:constructs:
        - id: Photos
          addr: c87ba073e4a15d934642a3aaf5c89ce796c7ca0bc3
          stack: dev-RMR-StorageStack
          type: Bucket
          data:
            name:
              Ref: PhotosBucket4131342A
            notifications: []
            notificationNames: []
        - id: Profiles
          addr: c8a6c2721e285bf4ac63deb145f62326d28ac4cc12
          stack: dev-RMR-StorageStack
          type: Table
          data:
            tableName:
              Ref: ProfilesTable43079065
            consumers: []
        - id: Reviews
          addr: c8f228ea1767577df2034a9c0ea3ed6ce6610cc6e9
          stack: dev-RMR-StorageStack
          type: Table
          data:
            tableName:
              Ref: ReviewsTable854B2DAD
            consumers: []
  PhotosBucket4131342A:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-StorageStack/Photos/Bucket/Resource
  ProfilesTable43079065:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: profileId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: profileId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: dev-RMR-Profiles
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-StorageStack/Profiles/Table/Resource
  ReviewsTable854B2DAD:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: reviewId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: reviewId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: dev-RMR-Reviews
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-StorageStack/Reviews/Table/Resource
Outputs:
  ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850:
    Value:
      Fn::GetAtt:
        - ProfilesTable43079065
        - Arn
    Export:
      Name: >-
        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
  ExportsOutputRefProfilesTable43079065AF0BFE3F:
    Value:
      Ref: ProfilesTable43079065
    Export:
      Name: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
  ExportsOutputRefReviewsTable854B2DAD5D6B8FD5:
    Description: Output added by SST b/c exported value still used in dev-RMR-ApiStack
    Value: dev-RMR-Reviews
    Export:
      Name: dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5
  ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2:
    Description: Output added by SST b/c exported value still used in dev-RMR-ApiStack
    Value: arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews
    Export:
      Name: >-
        dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-06-24T16:13:35.114] [DEBUG] default - deploy stack: run cdk deploy
[2022-06-24T16:13:35.131] [DEBUG] default - deploy stack: poll stack status
[2022-06-24T16:13:35.480] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:15.892Z
}
[2022-06-24T16:13:35.481] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:13:36.406] [TRACE] default - deploy stack: run cdk deploy: stderr: 
✨  Synthesis time: 0.02s


[2022-06-24T16:13:36.407] [TRACE] default - deploy stack: run cdk deploy: stderr: [1mdev-RMR-StorageStack[22m: deploying...

[2022-06-24T16:13:38.001] [TRACE] default - deploy stack: run cdk deploy: stderr: [0%] start: Publishing 7150e2e4535c564bc21583afd8dde3500cf58b91f67c279c8314ee32e1fc9b61:215957796486-us-west-2

[2022-06-24T16:13:38.843] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:15.892Z
}
[2022-06-24T16:13:38.843] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:13:39.520] [TRACE] default - deploy stack: run cdk deploy: stderr: [100%] success: Published 7150e2e4535c564bc21583afd8dde3500cf58b91f67c279c8314ee32e1fc9b61:215957796486-us-west-2

[2022-06-24T16:13:40.744] [TRACE] default - deploy stack: run cdk deploy: stderr: [1mdev-RMR-StorageStack[22m: creating CloudFormation changeset...

[2022-06-24T16:13:42.178] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:15.892Z
}
[2022-06-24T16:13:42.178] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:13:45.536] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:15.892Z
}
[2022-06-24T16:13:45.536] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:13:48.889] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_IN_PROGRESS',
  LastUpdatedTime: 2022-06-24T23:13:47.880Z
}
[2022-06-24T16:13:48.889] [DEBUG] default - deploy stack: poll stack status: cf update started
[2022-06-24T16:13:48.890] [DEBUG] default - deploy stack: done dev-RMR-StorageStack {
  status: 'deploying',
  statusReason: undefined,
  account: '215957796486',
  outputs: {
    ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2: 'arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews',
    ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850: 'arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Profiles',
    ExportsOutputRefReviewsTable854B2DAD5D6B8FD5: 'dev-RMR-Reviews',
    ExportsOutputRefProfilesTable43079065AF0BFE3F: 'dev-RMR-Profiles'
  },
  exports: {
    'dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2': 'arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews',
    'dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850': 'arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Profiles',
    'dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5': 'dev-RMR-Reviews',
    'dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F': 'dev-RMR-Profiles'
  }
}
[2022-06-24T16:13:48.891] [TRACE] default - After deploy stacks: [{"id":"dev-RMR-StorageStack","name":"dev-RMR-StorageStack","status":"deploying","dependencies":[],"account":"215957796486","region":"us-west-2","startedAt":1656112428891,"events":[],"outputs":{"ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews","ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Profiles","ExportsOutputRefReviewsTable854B2DAD5D6B8FD5":"dev-RMR-Reviews","ExportsOutputRefProfilesTable43079065AF0BFE3F":"dev-RMR-Profiles"},"exports":{"dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews","dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Profiles","dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5":"dev-RMR-Reviews","dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F":"dev-RMR-Profiles"}},{"id":"dev-RMR-ApiStack","name":"dev-RMR-ApiStack","status":"pending","dependencies":["dev-RMR-StorageStack"],"region":"us-west-2","events":[]}]
[2022-06-24T16:13:48.891] [INFO] default - Checking deploy status...
[2022-06-24T16:13:48.909] [DEBUG] default - deploy stack: run cdk deploy: exited with code null
[2022-06-24T16:13:53.893] [TRACE] default - Initial stack states: [{"id":"dev-RMR-StorageStack","name":"dev-RMR-StorageStack","status":"deploying","dependencies":[],"account":"215957796486","region":"us-west-2","startedAt":1656112428891,"events":[],"outputs":{"ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews","ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Profiles","ExportsOutputRefReviewsTable854B2DAD5D6B8FD5":"dev-RMR-Reviews","ExportsOutputRefProfilesTable43079065AF0BFE3F":"dev-RMR-Profiles"},"exports":{"dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews","dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Profiles","dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5":"dev-RMR-Reviews","dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F":"dev-RMR-Profiles"}},{"id":"dev-RMR-ApiStack","name":"dev-RMR-ApiStack","status":"pending","dependencies":["dev-RMR-StorageStack"],"region":"us-west-2","events":[]}]
[2022-06-24T16:13:53.894] [DEBUG] default - Fetching stack events dev-RMR-StorageStack
[2022-06-24T16:13:54.301] [INFO] default - dev-RMR-StorageStack | [0mUPDATE_IN_PROGRESS[0m | AWS::CloudFormation::Stack | [0m[1mdev-RMR-StorageStack[22m[0m | [0mUser Initiated[0m
[2022-06-24T16:13:54.302] [INFO] default - dev-RMR-StorageStack | [32mUPDATE_COMPLETE_CLEANUP_IN_PROGRESS[39m | AWS::CloudFormation::Stack | [32m[1mdev-RMR-StorageStack[22m[39m
[2022-06-24T16:13:54.302] [INFO] default - dev-RMR-StorageStack | [32mUPDATE_COMPLETE[39m | AWS::CloudFormation::Stack | [32m[1mdev-RMR-StorageStack[22m[39m
[2022-06-24T16:13:54.303] [DEBUG] default - Checking stack status dev-RMR-StorageStack
[2022-06-24T16:13:54.638] [INFO] default - [32m[39m
[32m ✅  dev-RMR-StorageStack[39m
[32m[39m
[2022-06-24T16:13:54.639] [TRACE] default - After update deploy statuses: [{"id":"dev-RMR-StorageStack","name":"dev-RMR-StorageStack","status":"succeeded","dependencies":[],"account":"215957796486","region":"us-west-2","startedAt":1656112428891,"endedAt":1656112434638,"events":[{"eventId":"4d3c5bc0-f413-11ec-871d-0a19ce392861","timestamp":"2022-06-24T23:13:47.880Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"dev-RMR-StorageStack"},{"eventId":"50a131a0-f413-11ec-acba-0ab6f23c0003","timestamp":"2022-06-24T23:13:53.588Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_COMPLETE_CLEANUP_IN_PROGRESS","logicalResourceId":"dev-RMR-StorageStack"},{"eventId":"510327c0-f413-11ec-81d0-0ab48fda5d7b","timestamp":"2022-06-24T23:13:54.224Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_COMPLETE","logicalResourceId":"dev-RMR-StorageStack"}],"eventsFirstEventAt":"2022-06-24T23:13:42.880Z","outputs":{"ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews","ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Profiles","ExportsOutputRefReviewsTable854B2DAD5D6B8FD5":"dev-RMR-Reviews","ExportsOutputRefProfilesTable43079065AF0BFE3F":"dev-RMR-Profiles"},"exports":{"dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Reviews","dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850":"arn:aws:dynamodb:us-west-2:215957796486:table/dev-RMR-Profiles","dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5":"dev-RMR-Reviews","dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F":"dev-RMR-Profiles"}},{"id":"dev-RMR-ApiStack","name":"dev-RMR-ApiStack","status":"pending","dependencies":["dev-RMR-StorageStack"],"region":"us-west-2","events":[]}]
[2022-06-24T16:13:54.639] [DEBUG] default - deploy stack: started dev-RMR-ApiStack
[2022-06-24T16:13:54.640] [DEBUG] default - deploy stack: get pre-deploy status
[2022-06-24T16:13:54.998] [DEBUG] default - deploy stack: get pre-deploy status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:13:54.999] [DEBUG] default - deploy stack: addInUseExports
[2022-06-24T16:13:55.001] [DEBUG] default - deploy stack: isTemplateChanged
[2022-06-24T16:13:55.644] [DEBUG] default - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/SSTMetadata
      sst:version: 1.2.20
      sst:constructs:
        - id: ProfilesApi
          addr: c880066a3ef0d6dd218c7c04ac8a0f655d9dad10cf
          stack: dev-RMR-ApiStack
          type: Api
          data:
            graphql: false
            url:
              Fn::Join:
                - ''
                - - https://
                  - Ref: ProfilesApi7EB07B3F
                  - .execute-api.us-west-2.
                  - Ref: AWS::URLSuffix
                  - /
            httpApiId:
              Ref: ProfilesApi7EB07B3F
            routes:
              - type: function
                route: POST /profiles
                fn:
                  node: c830956be3851f5a5d4ade40d83c5f4923d68862f7
                  stack: dev-RMR-ApiStack
              - type: function
                route: GET /profiles
                fn:
                  node: c82f9709ebae36ea4d4d17094efcf7f0989e403623
                  stack: dev-RMR-ApiStack
              - type: function
                route: GET /profiles/{id}
                fn:
                  node: c8c1500cc1e23fa2d867340373cdd07a95aa2dd1f6
                  stack: dev-RMR-ApiStack
              - type: function
                route: PUT /profiles/{id}
                fn:
                  node: c8d334da4ec771853afb59e5424540661e92ef2409
                  stack: dev-RMR-ApiStack
              - type: function
                route: DELETE /profiles/{id}
                fn:
                  node: c8235de633028010c7962c2bf21576797f4bfbe8c4
                  stack: dev-RMR-ApiStack
        - id: Lambda_POST_--profiles
          addr: c830956be3851f5a5d4ade40d83c5f4923d68862f7
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_POST_-profiles
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaPOSTprofilesEE603927
                - Arn
        - id: Lambda_GET_--profiles
          addr: c82f9709ebae36ea4d4d17094efcf7f0989e403623
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_GET_-profiles
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaGETprofilesD7613302
                - Arn
        - id: Lambda_GET_--profiles--{id}
          addr: c8c1500cc1e23fa2d867340373cdd07a95aa2dd1f6
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_GET_-profiles-{id}
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaGETprofilesidD4146CB6
                - Arn
        - id: Lambda_PUT_--profiles--{id}
          addr: c8d334da4ec771853afb59e5424540661e92ef2409
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_PUT_-profiles-{id}
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaPUTprofilesid2024A88A
                - Arn
        - id: Lambda_DELETE_--profiles--{id}
          addr: c8235de633028010c7962c2bf21576797f4bfbe8c4
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_DELETE_-profiles-{id}
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaDELETEprofilesidD07786D7
                - Arn
        - id: ReviewsApi
          addr: c8b7e86b12948e1db3373837f6ed25d8fe78787fdc
          stack: dev-RMR-ApiStack
          type: Api
          data:
            graphql: false
            url:
              Fn::Join:
                - ''
                - - https://
                  - Ref: ReviewsApi00BAD234
                  - .execute-api.us-west-2.
                  - Ref: AWS::URLSuffix
                  - /
            httpApiId:
              Ref: ReviewsApi00BAD234
            routes:
              - type: function
                route: POST /reviews
                fn:
                  node: c8988a2a4aa1501e16e64bd2379c1f5cf6e1d6cdbe
                  stack: dev-RMR-ApiStack
              - type: function
                route: GET /reviews/{id}
                fn:
                  node: c85fad853b177862ea35d6322b3fafb33608489755
                  stack: dev-RMR-ApiStack
              - type: function
                route: PUT /reviews/{id}
                fn:
                  node: c8aa8f0aa44840768303268d5199f5ec62f08b3b43
                  stack: dev-RMR-ApiStack
        - id: Lambda_POST_--reviews
          addr: c8988a2a4aa1501e16e64bd2379c1f5cf6e1d6cdbe
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ReviewsApi-Lambda_POST_-reviews
            arn:
              Fn::GetAtt:
                - ReviewsApiLambdaPOSTreviews577FF643
                - Arn
        - id: Lambda_GET_--reviews--{id}
          addr: c85fad853b177862ea35d6322b3fafb33608489755
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ReviewsApi-Lambda_GET_-reviews-{id}
            arn:
              Fn::GetAtt:
                - ReviewsApiLambdaGETreviewsidD7B16A25
                - Arn
        - id: Lambda_PUT_--reviews--{id}
          addr: c8aa8f0aa44840768303268d5199f5ec62f08b3b43
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ReviewsApi-Lambda_PUT_-reviews-{id}
            arn:
              Fn::GetAtt:
                - ReviewsApiLambdaPUTreviewsidA191C032
                - Arn
  ProfilesApi7EB07B3F:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
      Name: dev-RMR-ProfilesApi
      ProtocolType: HTTP
      Tags:
        sst:app: RMR
        sst:stage: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Api/Resource
  ProfilesApiDefaultStage03EFC3DC:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      StageName: $default
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ProfilesApiLogGroupA902C092
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","integrationStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId"}
      AutoDeploy: true
      Tags:
        sst:app: RMR
        sst:stage: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Api/DefaultStage/Resource
  ProfilesApiLogGroupA902C092:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/dev-RMR-ProfilesApi-
            - Ref: ProfilesApi7EB07B3F
            - /default
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/LogGroup/Resource
  ProfilesApiLambdaPOSTprofilesServiceRoleDEA45234:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_POST_--profiles/ServiceRole/Resource
  ProfilesApiLambdaPOSTprofilesServiceRoleDefaultPolicy2E3F0FF6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaPOSTprofilesServiceRoleDefaultPolicy2E3F0FF6
      Roles:
        - Ref: ProfilesApiLambdaPOSTprofilesServiceRoleDEA45234
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_POST_--profiles/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaPOSTprofilesEE603927:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaPOSTprofilesServiceRoleDEA45234
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/createProfile.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_POST_-profiles
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaPOSTprofilesServiceRoleDefaultPolicy2E3F0FF6
      - ProfilesApiLambdaPOSTprofilesServiceRoleDEA45234
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_POST_--profiles/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaPOSTprofilesEventInvokeConfig2130586D:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaPOSTprofilesEE603927
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_POST_--profiles/EventInvokeConfig/Resource
  ProfilesApiRoutePOSTprofilesIntegrationPOSTprofilesFF12C094:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaPOSTprofilesEE603927
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_POST_--profiles/Integration_POST_--profiles/Resource
  ProfilesApiRoutePOSTprofilesIntegrationPOSTprofilesPermissionBDB52DF6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaPOSTprofilesEE603927
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_POST_--profiles/Integration_POST_--profiles-Permission
  ProfilesApiRoutePOSTprofiles9323EE43:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: POST /profiles
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRoutePOSTprofilesIntegrationPOSTprofilesFF12C094
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_POST_--profiles/Resource
  ProfilesApiLambdaGETprofilesServiceRole8762ACC4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles/ServiceRole/Resource
  ProfilesApiLambdaGETprofilesServiceRoleDefaultPolicy7A8A04ED:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaGETprofilesServiceRoleDefaultPolicy7A8A04ED
      Roles:
        - Ref: ProfilesApiLambdaGETprofilesServiceRole8762ACC4
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaGETprofilesD7613302:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesServiceRole8762ACC4
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/getProfileList.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_GET_-profiles
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaGETprofilesServiceRoleDefaultPolicy7A8A04ED
      - ProfilesApiLambdaGETprofilesServiceRole8762ACC4
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaGETprofilesEventInvokeConfig5B0D53F5:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaGETprofilesD7613302
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles/EventInvokeConfig/Resource
  ProfilesApiRouteGETprofilesIntegrationGETprofiles54315FA6:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesD7613302
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles/Integration_GET_--profiles/Resource
  ProfilesApiRouteGETprofilesIntegrationGETprofilesPermission5D491D76:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesD7613302
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles/Integration_GET_--profiles-Permission
  ProfilesApiRouteGETprofiles24D543E2:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: GET /profiles
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRouteGETprofilesIntegrationGETprofiles54315FA6
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles/Resource
  ProfilesApiLambdaGETprofilesidServiceRole0CD13A4B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles--{id}/ServiceRole/Resource
  ProfilesApiLambdaGETprofilesidServiceRoleDefaultPolicyC55E7D45:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaGETprofilesidServiceRoleDefaultPolicyC55E7D45
      Roles:
        - Ref: ProfilesApiLambdaGETprofilesidServiceRole0CD13A4B
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles--{id}/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaGETprofilesidD4146CB6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesidServiceRole0CD13A4B
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/getProfile.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_GET_-profiles-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaGETprofilesidServiceRoleDefaultPolicyC55E7D45
      - ProfilesApiLambdaGETprofilesidServiceRole0CD13A4B
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles--{id}/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaGETprofilesidEventInvokeConfig8416267C:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaGETprofilesidD4146CB6
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles--{id}/EventInvokeConfig/Resource
  ProfilesApiRouteGETprofilesidIntegrationGETprofilesidED893D9B:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesidD4146CB6
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles--{id}/Integration_GET_--profiles--{id}/Resource
  ProfilesApiRouteGETprofilesidIntegrationGETprofilesidPermission2FE44392:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesidD4146CB6
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles/{id}
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles--{id}/Integration_GET_--profiles--{id}-Permission
  ProfilesApiRouteGETprofilesidB307DFEA:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: GET /profiles/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRouteGETprofilesidIntegrationGETprofilesidED893D9B
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles--{id}/Resource
  ProfilesApiLambdaPUTprofilesidServiceRoleE02CF388:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_PUT_--profiles--{id}/ServiceRole/Resource
  ProfilesApiLambdaPUTprofilesidServiceRoleDefaultPolicy17DECB62:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaPUTprofilesidServiceRoleDefaultPolicy17DECB62
      Roles:
        - Ref: ProfilesApiLambdaPUTprofilesidServiceRoleE02CF388
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_PUT_--profiles--{id}/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaPUTprofilesid2024A88A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaPUTprofilesidServiceRoleE02CF388
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/updateProfile.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_PUT_-profiles-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaPUTprofilesidServiceRoleDefaultPolicy17DECB62
      - ProfilesApiLambdaPUTprofilesidServiceRoleE02CF388
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_PUT_--profiles--{id}/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaPUTprofilesidEventInvokeConfigC5B65705:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaPUTprofilesid2024A88A
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_PUT_--profiles--{id}/EventInvokeConfig/Resource
  ProfilesApiRoutePUTprofilesidIntegrationPUTprofilesidE1E40722:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaPUTprofilesid2024A88A
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_PUT_--profiles--{id}/Integration_PUT_--profiles--{id}/Resource
  ProfilesApiRoutePUTprofilesidIntegrationPUTprofilesidPermissionB745E0E1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaPUTprofilesid2024A88A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles/{id}
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_PUT_--profiles--{id}/Integration_PUT_--profiles--{id}-Permission
  ProfilesApiRoutePUTprofilesid36F542CB:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: PUT /profiles/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRoutePUTprofilesidIntegrationPUTprofilesidE1E40722
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_PUT_--profiles--{id}/Resource
  ProfilesApiLambdaDELETEprofilesidServiceRole05F0F7CC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles--{id}/ServiceRole/Resource
  ProfilesApiLambdaDELETEprofilesidServiceRoleDefaultPolicy4A6E74DB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaDELETEprofilesidServiceRoleDefaultPolicy4A6E74DB
      Roles:
        - Ref: ProfilesApiLambdaDELETEprofilesidServiceRole05F0F7CC
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles--{id}/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaDELETEprofilesidD07786D7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofilesidServiceRole05F0F7CC
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/deleteProfile.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_DELETE_-profiles-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaDELETEprofilesidServiceRoleDefaultPolicy4A6E74DB
      - ProfilesApiLambdaDELETEprofilesidServiceRole05F0F7CC
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles--{id}/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaDELETEprofilesidEventInvokeConfig85E01C37:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaDELETEprofilesidD07786D7
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles--{id}/EventInvokeConfig/Resource
  ProfilesApiRouteDELETEprofilesidIntegrationDELETEprofilesidCAE5CC8B:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofilesidD07786D7
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles--{id}/Integration_DELETE_--profiles--{id}/Resource
  ProfilesApiRouteDELETEprofilesidIntegrationDELETEprofilesidPermission6AC5C91F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofilesidD07786D7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles/{id}
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles--{id}/Integration_DELETE_--profiles--{id}-Permission
  ProfilesApiRouteDELETEprofilesid004DFD19:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: DELETE /profiles/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: >-
                ProfilesApiRouteDELETEprofilesidIntegrationDELETEprofilesidCAE5CC8B
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles--{id}/Resource
  ReviewsApi00BAD234:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
      Name: dev-RMR-ReviewsApi
      ProtocolType: HTTP
      Tags:
        sst:app: RMR
        sst:stage: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Api/Resource
  ReviewsApiDefaultStageA3125BDC:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ReviewsApi00BAD234
      StageName: $default
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ReviewsApiLogGroupA9FE9D0D
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","integrationStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId"}
      AutoDeploy: true
      Tags:
        sst:app: RMR
        sst:stage: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Api/DefaultStage/Resource
  ReviewsApiLogGroupA9FE9D0D:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/dev-RMR-ReviewsApi-
            - Ref: ReviewsApi00BAD234
            - /default
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/LogGroup/Resource
  ReviewsApiLambdaPOSTreviewsServiceRole2699BC75:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Lambda_POST_--reviews/ServiceRole/Resource
  ReviewsApiLambdaPOSTreviewsServiceRoleDefaultPolicyB43F45AE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2
                    - /*
        Version: '2012-10-17'
      PolicyName: ReviewsApiLambdaPOSTreviewsServiceRoleDefaultPolicyB43F45AE
      Roles:
        - Ref: ReviewsApiLambdaPOSTreviewsServiceRole2699BC75
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Lambda_POST_--reviews/ServiceRole/DefaultPolicy/Resource
  ReviewsApiLambdaPOSTreviews577FF643:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ReviewsApiLambdaPOSTreviewsServiceRole2699BC75
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: reviews/createReview.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ReviewsApi-Lambda_POST_-reviews
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ReviewsApiLambdaPOSTreviewsServiceRoleDefaultPolicyB43F45AE
      - ReviewsApiLambdaPOSTreviewsServiceRole2699BC75
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Lambda_POST_--reviews/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ReviewsApiLambdaPOSTreviewsEventInvokeConfig8E5D9B95:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ReviewsApiLambdaPOSTreviews577FF643
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Lambda_POST_--reviews/EventInvokeConfig/Resource
  ReviewsApiRoutePOSTreviewsIntegrationPOSTreviews012C0498:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ReviewsApi00BAD234
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ReviewsApiLambdaPOSTreviews577FF643
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Route_POST_--reviews/Integration_POST_--reviews/Resource
  ReviewsApiRoutePOSTreviewsIntegrationPOSTreviewsPermission406BC86B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReviewsApiLambdaPOSTreviews577FF643
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ReviewsApi00BAD234
            - /*/*/reviews
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Route_POST_--reviews/Integration_POST_--reviews-Permission
  ReviewsApiRoutePOSTreviews7D4D56B3:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ReviewsApi00BAD234
      RouteKey: POST /reviews
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ReviewsApiRoutePOSTreviewsIntegrationPOSTreviews012C0498
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Route_POST_--reviews/Resource
  ReviewsApiLambdaGETreviewsidServiceRole621C413A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Lambda_GET_--reviews--{id}/ServiceRole/Resource
  ReviewsApiLambdaGETreviewsidServiceRoleDefaultPolicyF40F4E04:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2
                    - /*
        Version: '2012-10-17'
      PolicyName: ReviewsApiLambdaGETreviewsidServiceRoleDefaultPolicyF40F4E04
      Roles:
        - Ref: ReviewsApiLambdaGETreviewsidServiceRole621C413A
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Lambda_GET_--reviews--{id}/ServiceRole/DefaultPolicy/Resource
  ReviewsApiLambdaGETreviewsidD7B16A25:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ReviewsApiLambdaGETreviewsidServiceRole621C413A
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: reviews/getReview.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ReviewsApi-Lambda_GET_-reviews-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ReviewsApiLambdaGETreviewsidServiceRoleDefaultPolicyF40F4E04
      - ReviewsApiLambdaGETreviewsidServiceRole621C413A
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Lambda_GET_--reviews--{id}/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ReviewsApiLambdaGETreviewsidEventInvokeConfigDDA0DC5F:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ReviewsApiLambdaGETreviewsidD7B16A25
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Lambda_GET_--reviews--{id}/EventInvokeConfig/Resource
  ReviewsApiRouteGETreviewsidIntegrationGETreviewsidEC2EECEE:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ReviewsApi00BAD234
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ReviewsApiLambdaGETreviewsidD7B16A25
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Route_GET_--reviews--{id}/Integration_GET_--reviews--{id}/Resource
  ReviewsApiRouteGETreviewsidIntegrationGETreviewsidPermission8A6B878D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReviewsApiLambdaGETreviewsidD7B16A25
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ReviewsApi00BAD234
            - /*/*/reviews/{id}
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Route_GET_--reviews--{id}/Integration_GET_--reviews--{id}-Permission
  ReviewsApiRouteGETreviewsidF4981757:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ReviewsApi00BAD234
      RouteKey: GET /reviews/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ReviewsApiRouteGETreviewsidIntegrationGETreviewsidEC2EECEE
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Route_GET_--reviews--{id}/Resource
  ReviewsApiLambdaPUTreviewsidServiceRoleF1090CD1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Lambda_PUT_--reviews--{id}/ServiceRole/Resource
  ReviewsApiLambdaPUTreviewsidServiceRoleDefaultPolicy650681C1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttReviewsTable854B2DADArn2DB3DAE2
                    - /*
        Version: '2012-10-17'
      PolicyName: ReviewsApiLambdaPUTreviewsidServiceRoleDefaultPolicy650681C1
      Roles:
        - Ref: ReviewsApiLambdaPUTreviewsidServiceRoleF1090CD1
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Lambda_PUT_--reviews--{id}/ServiceRole/DefaultPolicy/Resource
  ReviewsApiLambdaPUTreviewsidA191C032:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ReviewsApiLambdaPUTreviewsidServiceRoleF1090CD1
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefReviewsTable854B2DAD5D6B8FD5
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: reviews/updateReview.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ReviewsApi-Lambda_PUT_-reviews-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ReviewsApiLambdaPUTreviewsidServiceRoleDefaultPolicy650681C1
      - ReviewsApiLambdaPUTreviewsidServiceRoleF1090CD1
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Lambda_PUT_--reviews--{id}/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ReviewsApiLambdaPUTreviewsidEventInvokeConfig3DC5735F:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ReviewsApiLambdaPUTreviewsidA191C032
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Lambda_PUT_--reviews--{id}/EventInvokeConfig/Resource
  ReviewsApiRoutePUTreviewsidIntegrationPUTreviewsid6A0A4496:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ReviewsApi00BAD234
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ReviewsApiLambdaPUTreviewsidA191C032
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Route_PUT_--reviews--{id}/Integration_PUT_--reviews--{id}/Resource
  ReviewsApiRoutePUTreviewsidIntegrationPUTreviewsidPermission84D975C4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReviewsApiLambdaPUTreviewsidA191C032
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ReviewsApi00BAD234
            - /*/*/reviews/{id}
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ReviewsApi/Route_PUT_--reviews--{id}/Integration_PUT_--reviews--{id}-Permission
  ReviewsApiRoutePUTreviewsid89F4346D:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ReviewsApi00BAD234
      RouteKey: PUT /reviews/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ReviewsApiRoutePUTreviewsidIntegrationPUTreviewsid6A0A4496
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ReviewsApi/Route_PUT_--reviews--{id}/Resource
Outputs:
  ProfilesApiEndpoint:
    Value:
      Fn::GetAtt:
        - ProfilesApi7EB07B3F
        - ApiEndpoint
  ReviewsApiEndpoint:
    Value:
      Fn::GetAtt:
        - ReviewsApi00BAD234
        - ApiEndpoint
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-06-24T16:13:55.645] [DEBUG] default - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/SSTMetadata
      sst:version: 1.2.20
      sst:constructs:
        - id: ProfilesApi
          addr: c880066a3ef0d6dd218c7c04ac8a0f655d9dad10cf
          stack: dev-RMR-ApiStack
          type: Api
          data:
            graphql: false
            url:
              Fn::Join:
                - ''
                - - https://
                  - Ref: ProfilesApi7EB07B3F
                  - .execute-api.us-west-2.
                  - Ref: AWS::URLSuffix
                  - /
            httpApiId:
              Ref: ProfilesApi7EB07B3F
            routes:
              - type: function
                route: POST /profiles
                fn:
                  node: c830956be3851f5a5d4ade40d83c5f4923d68862f7
                  stack: dev-RMR-ApiStack
              - type: function
                route: GET /profiles
                fn:
                  node: c82f9709ebae36ea4d4d17094efcf7f0989e403623
                  stack: dev-RMR-ApiStack
              - type: function
                route: DELETE /profiles
                fn:
                  node: c871f4ac8a2d4de3d533d1103c2fe799c0a73f3132
                  stack: dev-RMR-ApiStack
              - type: function
                route: GET /profiles/{id}
                fn:
                  node: c8c1500cc1e23fa2d867340373cdd07a95aa2dd1f6
                  stack: dev-RMR-ApiStack
              - type: function
                route: PUT /profiles/{id}
                fn:
                  node: c8d334da4ec771853afb59e5424540661e92ef2409
                  stack: dev-RMR-ApiStack
              - type: function
                route: DELETE /profiles/{id}
                fn:
                  node: c8235de633028010c7962c2bf21576797f4bfbe8c4
                  stack: dev-RMR-ApiStack
        - id: Lambda_POST_--profiles
          addr: c830956be3851f5a5d4ade40d83c5f4923d68862f7
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_POST_-profiles
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaPOSTprofilesEE603927
                - Arn
        - id: Lambda_GET_--profiles
          addr: c82f9709ebae36ea4d4d17094efcf7f0989e403623
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_GET_-profiles
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaGETprofilesD7613302
                - Arn
        - id: Lambda_DELETE_--profiles
          addr: c871f4ac8a2d4de3d533d1103c2fe799c0a73f3132
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_DELETE_-profiles
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaDELETEprofiles0505CDE7
                - Arn
        - id: Lambda_GET_--profiles--{id}
          addr: c8c1500cc1e23fa2d867340373cdd07a95aa2dd1f6
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_GET_-profiles-{id}
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaGETprofilesidD4146CB6
                - Arn
        - id: Lambda_PUT_--profiles--{id}
          addr: c8d334da4ec771853afb59e5424540661e92ef2409
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_PUT_-profiles-{id}
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaPUTprofilesid2024A88A
                - Arn
        - id: Lambda_DELETE_--profiles--{id}
          addr: c8235de633028010c7962c2bf21576797f4bfbe8c4
          stack: dev-RMR-ApiStack
          type: Function
          data:
            localId: dev-RMR-ApiStack-ProfilesApi-Lambda_DELETE_-profiles-{id}
            arn:
              Fn::GetAtt:
                - ProfilesApiLambdaDELETEprofilesidD07786D7
                - Arn
  ProfilesApi7EB07B3F:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
      Name: dev-RMR-ProfilesApi
      ProtocolType: HTTP
      Tags:
        sst:app: RMR
        sst:stage: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Api/Resource
  ProfilesApiDefaultStage03EFC3DC:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      StageName: $default
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ProfilesApiLogGroupA902C092
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","integrationStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId"}
      AutoDeploy: true
      Tags:
        sst:app: RMR
        sst:stage: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Api/DefaultStage/Resource
  ProfilesApiLogGroupA902C092:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/dev-RMR-ProfilesApi-
            - Ref: ProfilesApi7EB07B3F
            - /default
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/LogGroup/Resource
  ProfilesApiLambdaPOSTprofilesServiceRoleDEA45234:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_POST_--profiles/ServiceRole/Resource
  ProfilesApiLambdaPOSTprofilesServiceRoleDefaultPolicy2E3F0FF6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaPOSTprofilesServiceRoleDefaultPolicy2E3F0FF6
      Roles:
        - Ref: ProfilesApiLambdaPOSTprofilesServiceRoleDEA45234
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_POST_--profiles/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaPOSTprofilesEE603927:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaPOSTprofilesServiceRoleDEA45234
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/createProfile.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_POST_-profiles
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaPOSTprofilesServiceRoleDefaultPolicy2E3F0FF6
      - ProfilesApiLambdaPOSTprofilesServiceRoleDEA45234
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_POST_--profiles/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaPOSTprofilesEventInvokeConfig2130586D:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaPOSTprofilesEE603927
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_POST_--profiles/EventInvokeConfig/Resource
  ProfilesApiRoutePOSTprofilesIntegrationPOSTprofilesFF12C094:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaPOSTprofilesEE603927
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_POST_--profiles/Integration_POST_--profiles/Resource
  ProfilesApiRoutePOSTprofilesIntegrationPOSTprofilesPermissionBDB52DF6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaPOSTprofilesEE603927
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_POST_--profiles/Integration_POST_--profiles-Permission
  ProfilesApiRoutePOSTprofiles9323EE43:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: POST /profiles
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRoutePOSTprofilesIntegrationPOSTprofilesFF12C094
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_POST_--profiles/Resource
  ProfilesApiLambdaGETprofilesServiceRole8762ACC4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles/ServiceRole/Resource
  ProfilesApiLambdaGETprofilesServiceRoleDefaultPolicy7A8A04ED:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaGETprofilesServiceRoleDefaultPolicy7A8A04ED
      Roles:
        - Ref: ProfilesApiLambdaGETprofilesServiceRole8762ACC4
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaGETprofilesD7613302:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesServiceRole8762ACC4
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/getProfileList.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_GET_-profiles
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaGETprofilesServiceRoleDefaultPolicy7A8A04ED
      - ProfilesApiLambdaGETprofilesServiceRole8762ACC4
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaGETprofilesEventInvokeConfig5B0D53F5:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaGETprofilesD7613302
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles/EventInvokeConfig/Resource
  ProfilesApiRouteGETprofilesIntegrationGETprofiles54315FA6:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesD7613302
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles/Integration_GET_--profiles/Resource
  ProfilesApiRouteGETprofilesIntegrationGETprofilesPermission5D491D76:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesD7613302
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles/Integration_GET_--profiles-Permission
  ProfilesApiRouteGETprofiles24D543E2:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: GET /profiles
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRouteGETprofilesIntegrationGETprofiles54315FA6
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles/Resource
  ProfilesApiLambdaDELETEprofilesServiceRole91A6F2DC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles/ServiceRole/Resource
  ProfilesApiLambdaDELETEprofilesServiceRoleDefaultPolicyE6949F5F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaDELETEprofilesServiceRoleDefaultPolicyE6949F5F
      Roles:
        - Ref: ProfilesApiLambdaDELETEprofilesServiceRole91A6F2DC
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaDELETEprofiles0505CDE7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofilesServiceRole91A6F2DC
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/deleteProfileList.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_DELETE_-profiles
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaDELETEprofilesServiceRoleDefaultPolicyE6949F5F
      - ProfilesApiLambdaDELETEprofilesServiceRole91A6F2DC
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaDELETEprofilesEventInvokeConfigDF7700EE:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaDELETEprofiles0505CDE7
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles/EventInvokeConfig/Resource
  ProfilesApiRouteDELETEprofilesIntegrationDELETEprofiles39A59BD0:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofiles0505CDE7
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles/Integration_DELETE_--profiles/Resource
  ProfilesApiRouteDELETEprofilesIntegrationDELETEprofilesPermissionEBC3210C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofiles0505CDE7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles/Integration_DELETE_--profiles-Permission
  ProfilesApiRouteDELETEprofiles6FC667C7:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: DELETE /profiles
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRouteDELETEprofilesIntegrationDELETEprofiles39A59BD0
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles/Resource
  ProfilesApiLambdaGETprofilesidServiceRole0CD13A4B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles--{id}/ServiceRole/Resource
  ProfilesApiLambdaGETprofilesidServiceRoleDefaultPolicyC55E7D45:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaGETprofilesidServiceRoleDefaultPolicyC55E7D45
      Roles:
        - Ref: ProfilesApiLambdaGETprofilesidServiceRole0CD13A4B
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles--{id}/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaGETprofilesidD4146CB6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesidServiceRole0CD13A4B
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/getProfile.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_GET_-profiles-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaGETprofilesidServiceRoleDefaultPolicyC55E7D45
      - ProfilesApiLambdaGETprofilesidServiceRole0CD13A4B
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles--{id}/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaGETprofilesidEventInvokeConfig8416267C:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaGETprofilesidD4146CB6
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_GET_--profiles--{id}/EventInvokeConfig/Resource
  ProfilesApiRouteGETprofilesidIntegrationGETprofilesidED893D9B:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesidD4146CB6
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles--{id}/Integration_GET_--profiles--{id}/Resource
  ProfilesApiRouteGETprofilesidIntegrationGETprofilesidPermission2FE44392:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaGETprofilesidD4146CB6
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles/{id}
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles--{id}/Integration_GET_--profiles--{id}-Permission
  ProfilesApiRouteGETprofilesidB307DFEA:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: GET /profiles/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRouteGETprofilesidIntegrationGETprofilesidED893D9B
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_GET_--profiles--{id}/Resource
  ProfilesApiLambdaPUTprofilesidServiceRoleE02CF388:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_PUT_--profiles--{id}/ServiceRole/Resource
  ProfilesApiLambdaPUTprofilesidServiceRoleDefaultPolicy17DECB62:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaPUTprofilesidServiceRoleDefaultPolicy17DECB62
      Roles:
        - Ref: ProfilesApiLambdaPUTprofilesidServiceRoleE02CF388
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_PUT_--profiles--{id}/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaPUTprofilesid2024A88A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaPUTprofilesidServiceRoleE02CF388
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/updateProfile.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_PUT_-profiles-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaPUTprofilesidServiceRoleDefaultPolicy17DECB62
      - ProfilesApiLambdaPUTprofilesidServiceRoleE02CF388
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_PUT_--profiles--{id}/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaPUTprofilesidEventInvokeConfigC5B65705:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaPUTprofilesid2024A88A
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_PUT_--profiles--{id}/EventInvokeConfig/Resource
  ProfilesApiRoutePUTprofilesidIntegrationPUTprofilesidE1E40722:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaPUTprofilesid2024A88A
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_PUT_--profiles--{id}/Integration_PUT_--profiles--{id}/Resource
  ProfilesApiRoutePUTprofilesidIntegrationPUTprofilesidPermissionB745E0E1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaPUTprofilesid2024A88A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles/{id}
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_PUT_--profiles--{id}/Integration_PUT_--profiles--{id}-Permission
  ProfilesApiRoutePUTprofilesid36F542CB:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: PUT /profiles/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ProfilesApiRoutePUTprofilesidIntegrationPUTprofilesidE1E40722
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_PUT_--profiles--{id}/Resource
  ProfilesApiLambdaDELETEprofilesidServiceRole05F0F7CC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles--{id}/ServiceRole/Resource
  ProfilesApiLambdaDELETEprofilesidServiceRoleDefaultPolicy4A6E74DB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
              - arn:aws:s3:::dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        dev-RMR-StorageStack:ExportsOutputFnGetAttProfilesTable43079065Arn0EE96850
                    - /*
        Version: '2012-10-17'
      PolicyName: ProfilesApiLambdaDELETEprofilesidServiceRoleDefaultPolicy4A6E74DB
      Roles:
        - Ref: ProfilesApiLambdaDELETEprofilesidServiceRole05F0F7CC
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles--{id}/ServiceRole/DefaultPolicy/Resource
  ProfilesApiLambdaDELETEprofilesidD07786D7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-215957796486-us-west-2
        S3Key: 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      Role:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofilesidServiceRole05F0F7CC
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: dev-RMR-StorageStack:ExportsOutputRefProfilesTable43079065AF0BFE3F
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: profiles/deleteProfile.main
          SST_DEBUG_ENDPOINT: wss://co069z9cxh.execute-api.us-west-2.amazonaws.com/dev
          SST_DEBUG_BUCKET_NAME: dev-rmr-debug-stack-bucket83908e77-5wwbole4kb80
          SST_FUNCTION_ID: dev-RMR-ApiStack-ProfilesApi-Lambda_DELETE_-profiles-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: RMR
        - Key: sst:stage
          Value: dev
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ProfilesApiLambdaDELETEprofilesidServiceRoleDefaultPolicy4A6E74DB
      - ProfilesApiLambdaDELETEprofilesidServiceRole05F0F7CC
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles--{id}/Resource
      aws:asset:path: >-
        asset.8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProfilesApiLambdaDELETEprofilesidEventInvokeConfig85E01C37:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ProfilesApiLambdaDELETEprofilesidD07786D7
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Lambda_DELETE_--profiles--{id}/EventInvokeConfig/Resource
  ProfilesApiRouteDELETEprofilesidIntegrationDELETEprofilesidCAE5CC8B:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofilesidD07786D7
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles--{id}/Integration_DELETE_--profiles--{id}/Resource
  ProfilesApiRouteDELETEprofilesidIntegrationDELETEprofilesidPermission6AC5C91F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProfilesApiLambdaDELETEprofilesidD07786D7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-west-2:215957796486:'
            - Ref: ProfilesApi7EB07B3F
            - /*/*/profiles/{id}
    Metadata:
      aws:cdk:path: >-
        dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles--{id}/Integration_DELETE_--profiles--{id}-Permission
  ProfilesApiRouteDELETEprofilesid004DFD19:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ProfilesApi7EB07B3F
      RouteKey: DELETE /profiles/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: >-
                ProfilesApiRouteDELETEprofilesidIntegrationDELETEprofilesidCAE5CC8B
    Metadata:
      aws:cdk:path: dev-RMR-ApiStack/ProfilesApi/Route_DELETE_--profiles--{id}/Resource
Outputs:
  ProfilesApiEndpoint:
    Value:
      Fn::GetAtt:
        - ProfilesApi7EB07B3F
        - ApiEndpoint
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-06-24T16:13:55.646] [DEBUG] default - deploy stack: run cdk deploy
[2022-06-24T16:13:55.654] [DEBUG] default - deploy stack: poll stack status
[2022-06-24T16:13:56.015] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:13:56.016] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:13:56.900] [TRACE] default - deploy stack: run cdk deploy: stderr: 
✨  Synthesis time: 0.02s


[2022-06-24T16:13:56.901] [TRACE] default - deploy stack: run cdk deploy: stderr: [1mdev-RMR-ApiStack[22m: deploying...

[2022-06-24T16:13:58.491] [TRACE] default - deploy stack: run cdk deploy: stderr: [0%] start: Publishing 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c:215957796486-us-west-2

[2022-06-24T16:13:58.491] [TRACE] default - deploy stack: run cdk deploy: stderr: [0%] start: Publishing 987ab82e2ed81f857017adfc57ba15226e8943fe470816f51b80b3fc077cc80e:215957796486-us-west-2

[2022-06-24T16:13:59.382] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:13:59.383] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:14:00.067] [TRACE] default - deploy stack: run cdk deploy: stderr: [50%] success: Published 987ab82e2ed81f857017adfc57ba15226e8943fe470816f51b80b3fc077cc80e:215957796486-us-west-2

[2022-06-24T16:14:00.069] [TRACE] default - deploy stack: run cdk deploy: stderr: [100%] success: Published 8d95e8000e6446a74f6ae9f39a0dd7b299ed6d7d68d831dce41cee1cb4119a1c:215957796486-us-west-2

[2022-06-24T16:14:01.581] [TRACE] default - deploy stack: run cdk deploy: stderr: [1mdev-RMR-ApiStack[22m: creating CloudFormation changeset...

[2022-06-24T16:14:02.804] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:14:02.805] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:14:06.166] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:14:06.167] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:14:09.533] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:14:09.534] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:14:12.897] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:14:12.898] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:14:16.255] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:14:16.255] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-06-24T16:14:19.577] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-06-24T23:08:52.982Z
}
[2022-06-24T16:14:19.578] [DEBUG] default - deploy stack: poll stack status: unknown
